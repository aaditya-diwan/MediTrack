package com.meditrack.patient.infrastructure.persistence.mapper;

import com.meditrack.patient.domain.model.MedicalRecord;
import com.meditrack.patient.domain.model.valueobjects.PatientId;
import com.meditrack.patient.infrastructure.persistence.entity.MedicalRecordEntity;
import com.meditrack.patient.infrastructure.persistence.entity.PatientEntity;

public class MedicalRecordMapper {

    public static MedicalRecord toDomain(MedicalRecordEntity entity) {
        if (entity == null) {
            return null;
        }

        MedicalRecord domain = new MedicalRecord();
        domain.setRecordId(entity.getId().toString());
        domain.setPatientId(new PatientId(entity.getPatient().getId()));
        domain.setDiagnosis(entity.getDiagnosis());
        domain.setTreatment(entity.getTreatment());
        domain.setDate(entity.getDate());
        return domain;
    }

    public static MedicalRecordEntity toEntity(MedicalRecord domain, PatientEntity patientEntity) {
        if (domain == null) {
            return null;
        }

        MedicalRecordEntity entity = new MedicalRecordEntity();
        // The ID is generated by the database, so we don't set it from the domain.
        entity.setPatient(patientEntity);
        entity.setDiagnosis(domain.getDiagnosis());
        entity.setTreatment(domain.getTreatment());
        entity.setDate(domain.getDate());
        return entity;
    }
}
